{"version":3,"sources":["App.js","index.js"],"names":["App","state","isLoading","movies","items","getMovies","a","async","axios","get","data","console","log","setState","this","className","map","item","src","thumbnail_url","alt","title","id","duration","keywords","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0QA+JeA,E,2MAtJXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,GACRC,MAAO,I,EAIXC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAGyBE,IAAMC,IAAI,+CAHnC,gBAGSL,EAHT,EAGGM,KAAMN,MAEbO,QAAQC,IAAIR,GACZ,EAAKS,SAAS,CAACT,QAAOF,WAAU,IAN5B,sC,mFAsBRY,KAAKT,c,+BAGA,IAAD,EACwBS,KAAKb,MAAzBC,EADJ,EACIA,UAAWE,EADf,EACeA,MACnB,OACI,6BAASW,UAAU,aACdb,EACG,yBAAKa,UAAU,UACX,0BAAMA,UAAU,gBAAhB,eAGJ,yBAAKA,UAAU,UACTX,EAAMY,KAAI,SAAAC,GAAI,OACZ,6BACI,yBAAKC,IAAKD,EAAKE,cAAeC,IAAKH,EAAKI,MAAOA,MAAOJ,EAAKI,QAC3D,4BAAMJ,EAAKK,IACX,4BAAML,EAAKI,OACX,4BAAMJ,EAAKM,UACX,2BAAKN,EAAKO,oB,GAjDxBC,IAAMC,WCJxBC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.686b2661.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n// import Movie from \"./Movie\"\n// import \"./App.css\";\n\n// 2-2. Planning Movie app, axios\n// 사용되는 API site https://yts.lt/api#list_movies\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [],\n        items: []\n    };\n\n    // async + await 을 사용해야 js가 아직 요청중인 axios를 놓치지 않음\n    getMovies = async() => {\n        // const {data:{data:{movies}}} = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n        // try {\n            const {data:{items}} = await axios.get('http://54.180.116.242:5200/recommend_bgm/6');\n            // console.log(movies);\n            console.log(items);\n            this.setState({items, isLoading:false})\n            // console.log(movies);\n        // } catch (error) {\n        //     console.error(error);\n        // }\n\n        \n    }\n    componentDidMount(){\n    \n        //--- 6초가 지나면 작동하는 함수 ---\n        // setTimeout(()=>{\n        //     this.setState({ isLoading: false});\n        // }, 6000);\n\n        //--- 동적 로딩 axios 함수 ---\n        this.getMovies();\n    }\n    \n    render(){\n        const { isLoading, items }= this.state;\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"movies\">\n                        { items.map(item=> (\n                            <div>\n                                <img src={item.thumbnail_url} alt={item.title} title={item.title} />\n                                <h4>{ item.id }</h4>\n                                <h4>{ item.title }</h4>\n                                <h4>{ item.duration }</h4>\n                                <p>{ item.keywords }</p>\n                            </div>\n                            ))}\n                        \n                            {/* {movies.map(movie=> (\n                        <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres}/>\n                        ))} */}\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\n\n\n////////////////////////////////////////////////////////////////////////////////////\n// 2-1. setState, component lifecycle - (Mounting, Updating, Unmounting) -----------\n\n// class App extends React.Component{\n\n//     constructor(props) {\n//         super(props);\n//         console.log('hello')\n//     }\n\n//     state = {\n//         count: 0\n//     };\n//     add = () => {\n//         this.setState(current => ({count: current.count + 1}));\n//     };\n//     minus = () => {\n//         this.setState(current => ({count: current.count - 1}));\n//     };\n//     componentDidMount(){\n//         console.log('component rendered')\n//     }\n//     componentDidUpdate(){\n//         console.log('I just updated!')\n//     }\n//     componentWillUnmount(){\n//         console.log('good bye :(')\n//     }\n//     render() {\n//         console.log(\"I'm rendering\")\n//         return (\n//         <div>\n//             <h1>The number is : {this.state.count}</h1>\n//             <button onClick={this.add}>Add</button>\n//             <button onClick={this.minus}>minus</button>\n//         </div>)\n//     };\n// }\n\n\n\n\n\n\n\n///////////////////////////////////////////////////////////////////\n// 1. Food 예제 function components --------------------------------\n\n// import PropTypes from 'prop-types';\n\n// function Food({ name, picture, rating }){\n//     return (\n//         <div>\n//             <h1>I like {name} </h1>\n//             <h4>ratings : {rating}/5.0</h4>\n//             <img src={picture} alt='none' />\n//         </div>\n//     );\n// }\n\n// Food.propTypes = {\n//     name : PropTypes.string.isRequired,\n//     picture : PropTypes.string.isRequired,\n//     rating : PropTypes.number.isRequired\n// };\n\n\n// const foodILike = [\n//                     {id:1, name:'pizza', img:'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ23Xt8NG9C66imQoz57tNX7kbQyiDmHI8GHYRafVjFb-0O0bjZ0g&s', ratings:5},\n//                     {id:2, name:'lotteria burger', img:'http://www.lotteria.com/Data//Goods/291/DetailImage.jpg', ratings:7.1}\n//                 ]\n\n// function renderFood(dish){\n//     return <Food key={dish.id} name={dish.name} picture={dish.img} rating={dish.ratings}/>\n// }\n\n// function App() {\n//     return (\n//         <div>\n//             <h1>\n//             Hello!! \n//             </h1>\n//             {foodILike.map(renderFood)}\n//         </div>\n//     );\n//}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App/> , document.getElementById('potato'));"],"sourceRoot":""}